{"ast":null,"code":"import _taggedTemplateLiteral from\"C:\\\\Users\\\\gqw2714\\\\sai-portfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";import _objectSpread from\"C:\\\\Users\\\\gqw2714\\\\sai-portfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:\\\\Users\\\\gqw2714\\\\sai-portfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\gqw2714\\\\sai-portfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  position: relative;\\n  height: 100vh;\\n  width: 100vw;\\n  margin: 0 auto;\\n  overflow: hidden;\\n  white-space: nowrap;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}/** @jsx jsx */import React,{useState,useEffect,useRef}from'react';import{css,jsx}from'@emotion/core';import SliderContent from'./SliderContent';import Slide from'./Slide';import Arrow from'./Arrow';import Dots from'./Dots';/**\r\n * @function Slider\r\n *\r\n * - For reference, the slides variable always refers to props.slides. _slides, will always\r\n *   refer to the internal variable set in state.\r\n *\r\n *  @todo\r\n * - Handle resizing.\r\n * - Instead of recreating the css event listener each time, perhaps it can be set once somehow.\r\n */var Slider=function Slider(props){var getWidth=function getWidth(){return window.innerWidth;};var contentRef=useRef();var slides=props.slides;var _useState=useState({activeIndex:0,translate:getWidth(),transition:0.45,_slides:[slides[slides.length-1]].concat(_toConsumableArray(slides),[slides[0]])}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var activeIndex=state.activeIndex,translate=state.translate,_slides=state._slides,transition=state.transition;/** smoothTransition */var smoothTransition=function smoothTransition(){if(activeIndex===0&&translate>getWidth())return setState(_objectSpread({},state,{transition:0,translate:getWidth()}));if(activeIndex===slides.length-1&&translate===0){return setState(_objectSpread({},state,{transition:0,translate:getWidth()*slides.length}));}};/** Listen for CSS transform transition. */useEffect(function(){contentRef.current.addEventListener('transitionend',smoothTransition);return function(){return contentRef.current.removeEventListener('transitionend',smoothTransition);};},[activeIndex]);/** Reset transition once we have positioned the translate to it's proper value. */useEffect(function(){if(transition===0){setState(_objectSpread({},state,{transition:0.45}));}},[transition]);/** nextSlide */var nextSlide=function nextSlide(){var next=(activeIndex+2)*getWidth();if(activeIndex===slides.length-1){return setState(_objectSpread({},state,{activeIndex:0,translate:next}));}setState(_objectSpread({},state,{activeIndex:activeIndex+1,translate:next}));};/** prevSlide */var prevSlide=function prevSlide(){var prev=activeIndex*getWidth();if(activeIndex===0){return setState(_objectSpread({},state,{activeIndex:slides.length-1,translate:prev}));}setState(_objectSpread({},state,{activeIndex:activeIndex-1,translate:prev}));};return jsx(\"div\",{css:SliderCSS},jsx(SliderContent,{ref:contentRef,translate:translate,transition:transition,width:getWidth()*_slides.length},_slides.map(function(_slide,i){return jsx(Slide,{key:_slide+i,content:_slide,images:true});})),jsx(Arrow,{direction:\"left\",handleClick:prevSlide}),jsx(Arrow,{direction:\"right\",handleClick:nextSlide}),jsx(Dots,{slides:slides,activeIndex:activeIndex}));};var SliderCSS=css(_templateObject());export default Slider;","map":{"version":3,"sources":["C:/Users/gqw2714/sai-portfolio/src/components/Slider.js"],"names":["React","useState","useEffect","useRef","css","jsx","SliderContent","Slide","Arrow","Dots","Slider","props","getWidth","window","innerWidth","contentRef","slides","activeIndex","translate","transition","_slides","length","state","setState","smoothTransition","current","addEventListener","removeEventListener","nextSlide","next","prevSlide","prev","SliderCSS","map","_slide","i"],"mappings":"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","sourcesContent":["/** @jsx jsx */\r\nimport React, { useState, useEffect, useRef } from 'react'\r\nimport { css, jsx } from '@emotion/core'\r\nimport SliderContent from './SliderContent'\r\nimport Slide from './Slide'\r\nimport Arrow from './Arrow'\r\nimport Dots from './Dots'\r\n\r\n/**\r\n * @function Slider\r\n *\r\n * - For reference, the slides variable always refers to props.slides. _slides, will always\r\n *   refer to the internal variable set in state.\r\n *\r\n *  @todo\r\n * - Handle resizing.\r\n * - Instead of recreating the css event listener each time, perhaps it can be set once somehow.\r\n */\r\nconst Slider = props => {\r\n  const getWidth = () => window.innerWidth\r\n  const contentRef = useRef()\r\n\r\n  const { slides } = props\r\n\r\n  const [state, setState] = useState({\r\n    activeIndex: 0,\r\n    translate: getWidth(),\r\n    transition: 0.45,\r\n    _slides: [slides[slides.length - 1], ...slides, slides[0]]\r\n  })\r\n\r\n  const { activeIndex, translate, _slides, transition } = state\r\n\r\n  /** smoothTransition */\r\n  const smoothTransition = () => {\r\n    if (activeIndex === 0 && translate > getWidth())\r\n      return setState({ ...state, transition: 0, translate: getWidth() })\r\n\r\n    if (activeIndex === slides.length - 1 && translate === 0) {\r\n      return setState({\r\n        ...state,\r\n        transition: 0,\r\n        translate: getWidth() * slides.length\r\n      })\r\n    }\r\n  }\r\n\r\n  /** Listen for CSS transform transition. */\r\n  useEffect(() => {\r\n    contentRef.current.addEventListener('transitionend', smoothTransition)\r\n    return () =>\r\n      contentRef.current.removeEventListener('transitionend', smoothTransition)\r\n  }, [activeIndex])\r\n\r\n  /** Reset transition once we have positioned the translate to it's proper value. */\r\n  useEffect(() => {\r\n    if (transition === 0) {\r\n      setState({ ...state, transition: 0.45 })\r\n    }\r\n  }, [transition])\r\n\r\n  /** nextSlide */\r\n  const nextSlide = () => {\r\n    const next = (activeIndex + 2) * getWidth()\r\n\r\n    if (activeIndex === slides.length - 1) {\r\n      return setState({\r\n        ...state,\r\n        activeIndex: 0,\r\n        translate: next\r\n      })\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      activeIndex: activeIndex + 1,\r\n      translate: next\r\n    })\r\n  }\r\n\r\n  /** prevSlide */\r\n  const prevSlide = () => {\r\n    const prev = activeIndex * getWidth()\r\n\r\n    if (activeIndex === 0) {\r\n      return setState({\r\n        ...state,\r\n        activeIndex: slides.length - 1,\r\n        translate: prev\r\n      })\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      activeIndex: activeIndex - 1,\r\n      translate: prev\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div css={SliderCSS}>\r\n      <SliderContent\r\n        ref={contentRef}\r\n        translate={translate}\r\n        transition={transition}\r\n        width={getWidth() * _slides.length}\r\n      >\r\n        {_slides.map((_slide, i) => (\r\n          <Slide key={_slide + i} content={_slide} images />\r\n        ))}\r\n      </SliderContent>\r\n\r\n      <Arrow direction=\"left\" handleClick={prevSlide} />\r\n      <Arrow direction=\"right\" handleClick={nextSlide} />\r\n\r\n      <Dots slides={slides} activeIndex={activeIndex} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst SliderCSS = css`\r\n  position: relative;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n`\r\n\r\nexport default Slider\r\n"]},"metadata":{},"sourceType":"module"}